"""migration

Revision ID: f34b1569c395
Revises: 
Create Date: 2025-06-26 14:55:40.429361

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f34b1569c395'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patient',
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('middle_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('phone', sa.String(length=64), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_patient'))
    )
    op.create_table('role',
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("name IN ('admin', 'doctor', 'nurse')", name=op.f('ck_role_list')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('user',
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('middle_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('phone', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('password', sa.String(length=1024), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_user_role_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_phone'), 'user', ['phone'], unique=True)
    op.create_table('doctor',
    sa.Column('experience_years', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('biography', sa.String(length=1024), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_doctor_user_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_doctor'))
    )
    op.create_table('nurse',
    sa.Column('experience_years', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('biography', sa.String(length=1024), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_nurse_user_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nurse'))
    )
    op.create_table('patient_doctor',
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], name=op.f('fk_patient_doctor_doctor_id')),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], name=op.f('fk_patient_doctor_patient_id')),
    sa.PrimaryKeyConstraint('patient_id', 'doctor_id', name=op.f('pk_patient_doctor'))
    )
    op.create_table('session',
    sa.Column('notes', sa.String(length=64), nullable=False),
    sa.Column('nurse_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['nurse_id'], ['nurse.id'], name=op.f('fk_session_nurse_id')),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], name=op.f('fk_session_patient_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_session'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('session')
    op.drop_table('patient_doctor')
    op.drop_table('nurse')
    op.drop_table('doctor')
    op.drop_index(op.f('ix_user_phone'), table_name='user')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('patient')
    # ### end Alembic commands ###
