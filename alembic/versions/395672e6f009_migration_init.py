"""migration_init

Revision ID: 395672e6f009
Revises:
Create Date: 2025-08-19 11:52:13.515956

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "395672e6f009"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "country",
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_country")),
    )
    op.create_table(
        "diagnose",
        sa.Column("name", sa.String(length=2048), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_diagnose")),
    )
    op.create_table(
        "patient",
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("middle_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("phone", sa.String(length=64), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=True),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("true"), nullable=False
        ),
        sa.Column("planned_session_count", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_patient")),
    )
    op.create_table(
        "post",
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_post")),
    )
    op.create_table(
        "role",
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "name IN ('admin', 'nurse', 'doctor')", name=op.f("ck_role_list")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_role")),
        sa.UniqueConstraint("name", name=op.f("uq_role_name")),
    )
    op.create_table(
        "city",
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("county_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["county_id"], ["country.id"], name=op.f("fk_city_county_id")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_city")),
    )
    op.create_table(
        "user",
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("middle_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("phone", sa.String(length=64), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=True),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("true"), nullable=False
        ),
        sa.Column("password", sa.String(length=1024), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"], name=op.f("fk_user_role_id")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
    )
    op.create_index(op.f("ix_user_phone"), "user", ["phone"], unique=True)
    op.create_table(
        "address",
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("city_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["city_id"], ["city.id"], name=op.f("fk_address_city_id")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_address")),
    )
    op.create_table(
        "nurse",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_nurse_user_id")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_nurse")),
    )
    op.create_table(
        "hospital",
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("number", sa.Integer(), nullable=True),
        sa.Column("address_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["address_id"], ["address.id"], name=op.f("fk_hospital_address_id")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_hospital")),
    )
    op.create_table(
        "doctor",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("hospital_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["hospital_id"], ["hospital.id"], name=op.f("fk_doctor_hospital_id")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_doctor_user_id")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_doctor")),
    )
    op.create_table(
        "patient_doctor_diagnose",
        sa.Column("patient_id", sa.Integer(), nullable=False),
        sa.Column("doctor_id", sa.Integer(), nullable=False),
        sa.Column("diagnose_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["diagnose_id"],
            ["diagnose.id"],
            name=op.f("fk_patient_doctor_diagnose_diagnose_id"),
        ),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctor.id"],
            name=op.f("fk_patient_doctor_diagnose_doctor_id"),
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
            name=op.f("fk_patient_doctor_diagnose_patient_id"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_patient_doctor_diagnose")),
        sa.UniqueConstraint(
            "patient_id",
            "doctor_id",
            "diagnose_id",
            name=op.f("uq_patient_doctor_diagnose_patient_id"),
        ),
    )
    op.create_table(
        "session",
        sa.Column("notes", sa.String(length=64), nullable=False),
        sa.Column(
            "session_number",
            sa.Integer(),
            nullable=False,
            comment="session ordinal number",
        ),
        sa.Column(
            "session_duration_ms",
            sa.Integer(),
            nullable=False,
            comment="Session duration in ms",
        ),
        sa.Column("ozone_concentration", sa.Float(), nullable=False, comment="mg/l"),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column("nurse_id", sa.Integer(), nullable=False),
        sa.Column("patient_doctor_diagnose_id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["nurse_id"], ["nurse.id"], name=op.f("fk_session_nurse_id")
        ),
        sa.ForeignKeyConstraint(
            ["patient_doctor_diagnose_id"],
            ["patient_doctor_diagnose.id"],
            name=op.f("fk_session_patient_doctor_diagnose_id"),
        ),
        sa.ForeignKeyConstraint(
            ["post_id"], ["post.id"], name=op.f("fk_session_post_id")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_session")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("session")
    op.drop_table("patient_doctor_diagnose")
    op.drop_table("doctor")
    op.drop_table("hospital")
    op.drop_table("nurse")
    op.drop_table("address")
    op.drop_index(op.f("ix_user_phone"), table_name="user")
    op.drop_table("user")
    op.drop_table("city")
    op.drop_table("role")
    op.drop_table("post")
    op.drop_table("patient")
    op.drop_table("diagnose")
    op.drop_table("country")
    # ### end Alembic commands ###
